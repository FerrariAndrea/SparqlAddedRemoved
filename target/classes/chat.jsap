{
	"host": "localhost",
	"oauth": {
		"enable": false
	},
	"sparql11protocol": {
		"protocol": "http",
		"port": 8000,
		"query": {
			"path": "/query",
			"method": "POST",
			"format": "JSON"
		},
		"update": {
			"path": "/update",
			"method": "POST",
			"format": "JSON"
		}
	},
	"sparql11seprotocol": {
		"protocol": "ws",
		"reconnect" : true,
		"availableProtocols": {
			"ws": {
				"port": 9000,
				"path": "/subscribe"
			},
			"wss": {
				"port": 9443,
				"path": "/secure/subscribe"
			}
		}
	},
	"extended": {
		"type": "basic",
		"base": 0,
		"clients": 5,
		"messages": 5,
		"free_rooms" : 0
	},
	"graphs": {

	},
	"namespaces": {
		"schema": "http://schema.org/",
		"rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
		"chat": "http://wot.arces.unibo.it/chat#"
	},
	"updates": {
		"SEND": {			
			"sparql":"
					WITH ?room INSERT {
						?message rdf:type schema:Message ;
						schema:text ?text ;
						schema:sender ?sender ;
						schema:toRecipient ?receiver;
						schema:dateSent ?time ;
						chat:private ?private.
					} WHERE    {
						BIND(IRI(CONCAT(CONCAT(?room ,\"/message_\"),STRUUID())) AS ?message) .
						BIND(STR(now()) AS ?time) .
						GRAPH <http://wot.arces.unibo.it/chat/> {
							?sender rdf:type schema:Person .
							?receiver rdf:type schema:Person 
						}
					}						
				",
			"forcedBindings": {
				"text": {
					"type": "literal",
					"value": "Ciao!"
				},
				"sender": {
					"type": "uri",
					"value": "chat:IamASender"
				},
				"receiver": {
					"type": "uri",
					"value": "chat:IamAReceiver"
				},	
				"room": {					
					"type": "uri",
					"value": "http://wot.arces.unibo.it/chat/room_default"
				},
				"private": {
					"type": "literal",
					"value": 1
				}
			}
		},
		"SET_RECEIVED": {
			"sparql": "
					WITH ?room DELETE {
							?message schema:dateReceived ?time .
							?message chat:atualReceivedCount ?count .
					}
					INSERT {
							?message schema:dateReceived ?time .
							?message chat:atualReceivedCount ?countupdated.
					} WHERE {	
						OPTIONAL{?message chat:atualReceivedCount ?count.}
						?message rdf:type schema:Message .	
						BIND(STR(now()) AS ?time) .
						BIND ((IF(BOUND(?count), ?count + 1, 1)) AS ?countupdated) .
					}
				",
			"forcedBindings": {
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				},
				"room": {					
					"type": "uri",
					"value": "http://wot.arces.unibo.it/chat/room_default"
				}
			}
		},
		"REMOVE": {
			"sparql": "
			WITH ?room DELETE 
				{?message ?p ?o} 
			WHERE {
					?message rdf:type schema:Message ;
					chat:private ?private;
					?p ?o.					
					OPTIONAL{<http://wot.arces.unibo.it/chat/partecipants> rdf:value ?participants .}			
				 	OPTIONAL{?message chat:atualReceivedCount ?count.}
					BIND ((IF(BOUND(?count), ?count, 1)) AS ?countBinded).						
					BIND ((IF(BOUND(?participants), ?participants, 1)) AS ?participantsBinded).			
					FILTER (?countBinded >= ?participantsBinded || ?private = \"1\")
			}			
			",
			"forcedBindings": {
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				},
				"room": {					
					"type": "uri",
					"value": "http://wot.arces.unibo.it/chat/room_default"
				}
			}
		},
		"CREATE_ROOM":{
			"sparql": "
					INSERT DATA {
						GRAPH ?room {
							<http://wot.arces.unibo.it/chat/partecipants>  rdf:type chat:actualSize;
							rdf:value 0.
						}
					}
			",
			"forcedBindings": {
				"room": {					
					"type": "uri",
					"value": "http://wot.arces.unibo.it/chat/room_default"
				}
			}
		},
		"ENTER_ROOM":{
			"sparql": "
				WITH  ?room
				DELETE {
					<http://wot.arces.unibo.it/chat/partecipants> rdf:value ?oldValue 
				}
				INSERT {
					<http://wot.arces.unibo.it/chat/partecipants>  rdf:value ?newValue 
				}
				WHERE {	
					OPTIONAL{<http://wot.arces.unibo.it/chat/partecipants>  rdf:value  ?oldValue } 
					BIND ((IF(BOUND(?oldValue), ?oldValue + 1, 1)) AS ?newValue )
				}
			",
			"forcedBindings": {
				"room": {					
					"type": "uri",
					"value": "http://wot.arces.unibo.it/chat/room_default"
				}
			}
		},
		"STORE_SENT": {
			"sparql": "INSERT DATA {GRAPH <http://wot.arces.unibo.it/chat/log/> {?message schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?dateSent}}",
			"forcedBindings": {
				"dateSent": {
					"type": "literal",
					"value": "2018-06-28T00:00:00",
					"datatype": "xsd:dateTime"
				},
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				},
				"text": {
					"type": "literal",
					"value": "A message to be stored"
				},
				"sender": {
					"type": "uri",
					"value": "chat:IAmASender"
				},
				"receiver": {
					"type": "uri",
					"value": "chat:IAmAReceiver"
				}
			}
		},
		"STORE_RECEIVED": {
			"sparql": "WITH <http://wot.arces.unibo.it/chat/log/> INSERT DATA {?message schema:dateReceived ?dateReceived}",
			"forcedBindings": {
				"dateReceived": {
					"type": "literal",
					"value": "2018-06-28T00:00:00",
					"datatype": "xsd:dateTime"
				},
				"message": {
					"type": "uri",
					"value": "chat:ThisIsAMessage"
				}
			}
		},
		"REGISTER_USER": {
			"sparql": "WITH <http://wot.arces.unibo.it/chat/> DELETE {?x rdf:type schema:Person . ?x schema:name ?userName} INSERT {?person rdf:type schema:Person ; schema:name ?userName}  WHERE {BIND(IRI(CONCAT(\"http://wot.arces.unibo.it/chat/person_\",STRUUID())) AS ?person) OPTIONAL {?x rdf:type schema:Person . ?x schema:name ?userName}}",
			"forcedBindings": {
				"userName": {
					"type": "literal",
					"value": "My user name"
				}
			}
		},
		"DELETE_ALL": {
			"sparql": "WITH <http://wot.arces.unibo.it/chat/> DELETE {?s ?p ?o} WHERE {?s ?p ?o}"
		},
		"DELETE_ROOM": {
			"sparql": "DELETE {GRAPH ?g {?s ?p ?o} } WHERE  { GRAPH ?g {?s ?p ?o} . FILTER(regex(str(?g), \"http://wot.arces.unibo.it/chat/room\" ))}"
		}
	},
	"queries": {
		"SENT": {
			"sparql": "
				SELECT ?message ?sender ?name ?text ?time 
				FROM ?room 
				FROM NAMED <http://wot.arces.unibo.it/chat/>
				WHERE { {
						?message rdf:type schema:Message ;
						schema:text ?text ;
						schema:sender ?sender ;			
						schema:dateSent ?time ;
						chat:private \"1\";
						schema:toRecipient ?receiver .
						GRAPH <http://wot.arces.unibo.it/chat/> {
										?sender rdf:type schema:Person ;
										schema:name ?name .
										?receiver rdf:type schema:Person.
						}	
					}
					UNION 
					{
						?message rdf:type schema:Message ;
						schema:text ?text ;
						schema:sender ?sender ;			
						schema:dateSent ?time ;
						chat:private \"0\" .
						GRAPH <http://wot.arces.unibo.it/chat/> {
										?sender rdf:type schema:Person ;
										schema:name ?name .
						}	
					} } ORDER BY ?time
			",
			"forcedBindings": {
				"receiver": {
					"type": "uri",
					"value": "chat:IAmAReceiver"
				},
				"room": {					
					"type": "uri",
					"value": "http://wot.arces.unibo.it/chat/room_default"
				}
			}
		},
		"RECEIVED": {
			"sparql": "
				SELECT ?receiver ?message ?time FROM ?room WHERE {
						?message schema:sender ?sender ;
						schema:toRecipient ?receiver ;
						schema:dateReceived ?time ;
						rdf:type schema:Message .
					}",
			"forcedBindings": {
				"sender": {
					"type": "uri",
					"value": "chat:IAmASender"
				},
				"room": {					
					"type": "uri",
					"value": "http://wot.arces.unibo.it/chat/room_default"
				}
			}
		},
		"RECEIVED_MONITOR": {
			"sparql": "SELECT ?sender ?message ?time FROM <http://wot.arces.unibo.it/chat/> WHERE {?message schema:sender ?sender ; schema:dateReceived ?time ; rdf:type schema:Message}"
		},
		"LOG_SENT": {
			"sparql": "SELECT ?message ?sender ?receiver ?text ?dateSent FROM <http://wot.arces.unibo.it/chat/log> WHERE {?message schema:text ?text ; schema:sender ?sender ; schema:toRecipient ?receiver; schema:dateSent ?dateSent}"
		},
		"LOG_RECEIVED": {
			"sparql": "SELECT ?message ?dateReceived FROM <http://wot.arces.unibo.it/chat/log> WHERE {?message schema:dateReceived ?dateReceived}"
		},
		"USERS": {
			"sparql": "SELECT ?user ?userName FROM <http://wot.arces.unibo.it/chat/> WHERE {?user rdf:type schema:Person ; schema:name ?userName}"
		},
		"QUERY_ALL": {
			"sparql": "SELECT * FROM <http://wot.arces.unibo.it/chat/log> FROM <http://wot.arces.unibo.it/chat/> WHERE {?s ?p ?o}"
		}
	}
}